@{
    Layout = "_Layout";
}

@section styles{
    <style type="text/css">
        table {
            width: 100%;
            border: 1px solid #DDD;
        }

        th {
            padding: 5px 0;
            background-color: #F8F8F9;
            border-bottom: 1px solid #DDD;
        }

        td {
            padding: 5px 0;
            background-color: #FFF;
            text-align: center;
        }

        th, td {
            width: 20%;
        }

        .Group-title {
            float: left;
            color: #464c5b;
            font-size: 16px;
            font-weight: bold;
            padding-bottom: 15px;
        }

        .Group-del {
            float: right;
            margin-right: 10px;
        }
        .allot {
            width: 87.5px;
            margin-bottom: 1.5px;
            margin-top: 1.5px;
        }
        .ivu-icon {
            margin-left: 3px;
        }
        .QQleft {
            display:inline-block;
            width:70px;
            text-align:right;
        }
        .QQright {
            display: inline-block;
        }
    </style>
}

<div class="layout-content">
    <div class="container">
        <i-form :model="group" ref="newGroup" :label-width="80" enctype="multipart/form-data">
            <Row>
                <a href=""></a>
                <i-col span="24">
                    <Form-item label="小组名称：">
                        <i-input v-model="group.teamName" placeholder="请输入小组名称..."></i-input>
                    </Form-item>
                </i-col>
            </Row>
            <Row style="text-align:center;">
                <i-button type="primary" @@click="newTeam()">新建小组</i-button>
            </Row>
        </i-form>
    </div>
    <div class="container" v-for="(item,index) in newGroup">
        <div class="Group-title">{{item.team.teamName}}</div>
        <div class="Group-del"><i-button type="primary" @@click="delTeam(item.team.id)">删除小组</i-button></div>
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th>姓名</th>
                <th>手机</th>
                <th>QQ</th>
                @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                <th>操作</th>
                }
            </tr>
            <tr v-for="(item,index) in newGroup[index].ls">
                <td>{{ item.name }}</td>
                <td>{{ item.mobile }}</td>
                <td>
                    <div class="QQleft">
                        {{ item.qq }}
                    </div>
                    <div class="QQright">
                        <a v-if="item.qq" target="_blank" :href="'http://wpa.qq.com/msgrd?v=3&uin=' + item.qq + '&site=qq&menu=yes'"><img style="vertical-align:middle;" border="0" :src="'http://wpa.qq.com/pa?p=2:'+item.qq+':51'" alt="点击这里给我发消息" title="点击这里给我发消息" /></a>
                    </div>
                </td>
                @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                    <td>
                        <i-button v-if="item.isTeamLeader == false" @@click="set(item)">设置组长</i-button>
                        <i-button type="success" v-else-if="item.isTeamLeader == true" @@click="cancel(item)">取消组长</i-button>
                    </td>
                }
            </tr>
        </table>
    </div>
    <div class="container">
        <div class="assignment-title">未分配编辑部</div>
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th>姓名</th>
                <th>手机</th>
                <th>QQ</th>
                @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                    <th>操作</th>
                }
            </tr>
            <tr v-for="item in this.editor">
                <td>{{ item.name }}</td>
                <td>{{ item.mobile }}</td>
                <td>
                    <div class="QQleft">
                        {{ item.qq }}
                    </div>
                    <div class="QQright">
                        <a v-if="item.qq" target="_blank" :href="'http://wpa.qq.com/msgrd?v=3&uin=' + item.qq + '&site=qq&menu=yes'"><img style="vertical-align:middle;" border="0" :src="'http://wpa.qq.com/pa?p=2:'+item.qq+':51'" alt="点击这里给我发消息" title="点击这里给我发消息" /></a>
                    </div>
                </td>
                @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                    <td>
                        <dropdown style="margin-left: 5px" trigger="click">
                            <i-button @@click="assignment(item.id)" type="primary" class="operation">人员分配<Icon type="arrow-down-b"></Icon></i-button>
                            <DropdownMenu slot="list">
                                <div v-for="item in newGroup">
                                    <i-button class="allot" @@click="allot(item.team.id)">{{item.team.teamName}}</i-button>
                                </div>
                            </DropdownMenu>
                        </dropdown>
                    </td>
                }
            </tr>
        </table>
        @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "客服主管" || x.Value == "人事部")))
        {
            <div class="assignment-title">未分配兼职编辑部</div>
            <table cellpadding="0" cellspacing="0">
                <tr>
                    <th>姓名</th>
                    <th>手机</th>
                    <th>QQ</th>
                    @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                        <th>操作</th>
                    }
                </tr>
                <tr v-for="item in this.editor_parttime">
                    <td>{{ item.name }}</td>
                    <td>{{ item.mobile }}</td>
                    <td>
                        <div class="QQleft">
                            {{ item.qq }}
                        </div>
                        <div class="QQright">
                            <a v-if="item.qq" target="_blank" :href="'http://wpa.qq.com/msgrd?v=3&uin=' + item.qq + '&site=qq&menu=yes'"><img style="vertical-align:middle;" border="0" :src="'http://wpa.qq.com/pa?p=2:'+item.qq+':51'" alt="点击这里给我发消息" title="点击这里给我发消息" /></a>
                        </div>
                    </td>
                    @if (User.HasClaim(x => x.Type == System.Security.Claims.ClaimTypes.Role && (x.Value == "经理办" || x.Value == "人事部")))
                {
                        <td>
                            <dropdown style="margin-left: 5px">
                                <i-button @@click="assignment(item.id)" type="primary" class="operation">人员分配<Icon class="arrows" type="arrow-down-b"></Icon></i-button>
                                <DropdownMenu slot="list">
                                    <div v-for="item in newGroup">
                                        <i-button @@click="allot(item.team.id)">{{item.team.teamName}}</i-button>
                                    </div>
                                </DropdownMenu>
                            </dropdown>
                        </td>
                    }
                </tr>
            </table>
        }
    </div>

</div>
@section scripts{
    <script>

        moment.locale("zh-cn");

        new Vue({
            el: '#app',
            data: {
                //用户输入的小组名称
                group: {},
                //所有小组的名称和ID
                newGroup: [],
                //各个小组的成员
                groupStaff: [],
                editor: [],
                editor_parttime: [],
                chiefeditor: [],
                cs: [],
                manager: [],
                hr: [],
                userId: 0,
                vanishs: false,
                vanish: true

            },
            created: function () {
                var _this = this;
                axios.get("/api/team/group/编辑部").then(function (response) {
                    _this.editor = response.data;
                });
                axios.get("/api/team/group/兼职编辑部").then(function (response) {
                    _this.editor_parttime = response.data;
                });
                console.log(_this);
                _this.transfer();
            },
            methods: {
                transfer: function () { 
                    var _this = this;
                    axios.get("/api/Team/getTeamate").then(function (response) {
                        _this.newGroup = response.data;
                    }).catch(function (error) {
                        console.log("失败");
                    });
                },
                ban: function (user) {
                    user.status = false;
                },
                //新建小组
                newTeam: function () {
                    var _this = this;
                    if (_this.group.teamName == null) { 
                        _this.$Message.error('小组名称不能为空!');
                        return;
                    } else {
                        axios.post("/api/Team/add", this.group).then(function (response) {
                            _this.$Message.success('新建小组成功!');
                            _this.transfer();
                        }).catch(function (error) {
                            _this.$Message.error('新增小组失败,' + error.response.data);
                        });
                    }
                },
                //删除小组
                delTeam: function (id) {
                    var _this = this;
                    axios.get("/api/Team/del?teamid=" + id).then(function (response) {
                        _this.$Message.success('删除小组成功!');
                        _this.transfer();
                    }).catch(function (error) {
                        _this.$Message.error('删除小组失败,' + error.response.data);
                    });
                },
                //分配小组
                allot: function (val) {
                    var _this = this;
                    console.log(val);
                    console.log(_this.userId);
                    axios.get("/api/team/Create", {
                        params: {
                            uid: _this.userId,
                            teamid: val
                        }
                    }).then(function (response) {
                        _this.$Message.success('分配成功!');
                        axios.get("/api/team/group/编辑部").then(function (response) {
                            _this.editor = response.data;
                        });
                        axios.get("/api/team/group/兼职编辑部").then(function (response) {
                            _this.editor_parttime = response.data;
                        });
                        _this.transfer();
                    }).catch(function (error) {
                        _this.$Message.error('分配失败!' + error.response.data);
                    });
                },
                //点击查询当前组员ID
                assignment: function (val) { 
                    var _this = this;
                    console.log(val);
                    _this.userId = val;
                },
                //设置组长
                set: function (item) { 
                    var _this = this;
                    axios.get("/api/team/Set", {
                        params: {
                            uid: item.id,
                            type: "1"
                        }
                    }).then(function (response) {
                        _this.$Message.success('设置成功!');
                        _this.transfer();
                    }).catch(function (error) {
                        _this.$Message.error('设置失败,' + error.response.data);
                    });
                },
                //取消组长
                cancel: function (item) { 
                    var _this = this;
                    axios.get("/api/team/Set", {
                        params: {
                            uid: item.id,
                            type: "0"
                        }
                    }).then(function (response) {
                        _this.$Message.success('设置成功!');
                        _this.transfer();
                    }).catch(function (error) {
                        _this.$Message.error('设置失败,' + error.response.data);
                    });
                }
            }
        })


    </script>
}