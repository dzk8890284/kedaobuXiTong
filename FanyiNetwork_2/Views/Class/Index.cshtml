@{
    Layout = "_Layout";
}

@section styles{
    <style type="text/css">
        .inquire {
            width: 100%;
            margin-bottom: 10px;
        }

        .referA {
            display: inline-block;
            font-size: 14px;
            font-weight: 700;
            color: #464c5b;
        }

        .referB {
            color: white;
            float:right;
        }

        .review {
            border: 0;
            margin-top: 5px;
        }

        .order {
            border: 0;
            margin-top: 5px;
        }

        .lookAll {
            border: 0;
            margin-left: 1px;
            position: relative;
            left: -5px;
            top: 1px;
        }

        .operation {
            margin-top: 5px;
            padding: 5px 3px 5px 3px;
            height: 28px;
            width: 62px;
        }

        .edit {
            border: none;
            padding: 0px;
            width: 60px;
            margin-top: 3px;
        }

        .del {
            background-color: red;
            border: none;
            width: 60px;
            margin-top: 2px;
            margin-right: 5px;
        }

            .del:hover {
                background-color: #E94242;
            }

        .ivu-table th {
            text-align: center;
        }

        .ivu-table-cell {
            text-align: center;
            word-break: break-word;
        }

        .ivu-table-stripe .ivu-table-body tr:nth-child(2n) td {
            background-color: #f6feff;
        }

        .ivu-select-dropdown {
            width: 100px;
        }

        .refer {
            color: white;
        }
    </style>
}
<div class="layout-content">
    <div class="container">
        <i-form :model="ClassInfo" ref="ClassInfo" :rules="validateRules" :label-width="80" enctype="multipart/form-data">
            <Row>

                <i-col span="12">
                    <Form-item label="课程名称" prop="Name">
                        <i-input type="text" v-model="ClassInfo.Name" required="required" placeholder="请输入课程名称..."></i-input>
                    </Form-item>
                </i-col>
                <i-col span="12">
                    <Form-item label="大学名称" prop="university">
                        <i-input v-model="ClassInfo.university" placeholder="请输入大学名称..."></i-input>
                    </Form-item>
                </i-col>

            </Row>
            <Row>
                <i-col span="12">
                    <Form-item label="难度系数" prop="difficulty">
                        <i-select v-model="ClassInfo.difficulty" filterable>
                            <i-option v-for="item in difficulty" :value="item.name" :key="item.name">{{ item.name }}</i-option>
                        </i-select>
                    </Form-item>
                </i-col>
                <i-col span="12">
                    <Form-item label="教授名称" prop="professor">
                        <i-input v-model="ClassInfo.professor" placeholder="请输入教授名称..."></i-input>
                    </Form-item>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <Form-item label="备注">
                        <i-input v-model="ClassInfo.memo" type="textarea" placeholder="请填写您需要备注的信息..."></i-input>
                    </Form-item>
                </i-col>
            </Row>
            <Row style="text-align:center;">
                <i-button type="primary" @@click="handleSubmit()">新增课程</i-button>
            </Row>
        </i-form>
        <div class="assignment-title">全部课程</div>
        <div class="inquire">
            <span class="referA">查询课程：</span>
            <i-input v-model="searchText" placeholder="请输入您要查询的课程名称(通过回车查询或者右侧查询按钮进行查询)..." @@on-enter="fetchClass" style="width: 82%"></i-input>
            <i-button class="referB" type="primary" @@click="fetchClass()">查询课程</i-button>
        </div>
        <i-table stripe id="table" :columns="ClassInfo_column" :data="ClassInfos"></i-table>

    </div>
</div>

@section scripts{
    <script>
        moment.locale("zh-cn");

        new Vue({
            el: '#app',
            data: {
                userId: @Html.Raw(ViewData["userId"]),
                sex: "male",
                ClassInfo: {

                },
                ClassInfos: [

                ],
                difficulty: [
                    {
                        name: 1.0
                    },
                    {
                        name: 1.3
                    },
                    {
                        name: 1.6
                    },
                    {
                        name: 2.0
                    },
                ],
                searchText: "",
                ClassInfo_column: [
                    {
                        title: '课程',
                        key: 'name'
                    },
                    {
                        title: '大学',
                        key: 'university'
                    },
                    {
                        title: '难度',
                        key: 'difficulty'
                    },
                    {
                        title: '教授',
                        key: 'professor'
                    },
                    {
                        title: '备注',
                        key: 'memo'
                    },
                    {
                        title: '订单',
                        key: 'orderNum'
                    },
                    {
                        title: '操作',
                        width: 250,
                        render: function (row) {
                            return '<div><i-button class="review"  type="info" style="padding: 5px 6px;margin-left:5px"  @@click="Add(' + row.id + ')">新建回顾</i-button><i-button class="order"  type="info" style="padding: 5px 6px;margin-left:5px"  @@click="orderForm(' + row.id + ')">新建订单</i-button><dropdown style= "margin-left: 5px"><i-button type="primary" class="operation" >课程操作<Icon type="arrow-down-b"></Icon></i-button><i-dropdownMenu slot="list"><i-button class="lookAll"  type="info" style="padding: 5px 6px;margin-left:5px"  @@click="GetOrder(' + row.id + ')">查看全部</i-button><i-button class="edit" type="info" style="padding: 5px 6px;margin-right:5px"  @@click="redirect(' + row.id + ')">编辑</i-button><i-button class="del" type="info" style="padding: 5px 6px"  @@click="terminate(' + row.id + ')">删除</i-button></i-dropdownMenu></dropdown></div>';
                        }
                    }
                ],
                validateRules: {
                    Name: [
                        { required: true, message: '请填写课程名称', trigger: 'blur' }
                    ],
                    university: [
                        { required: true, message: '请填写大学名称', trigger: 'blur' }
                    ],
                    professor: [
                        { required: true, message: '请填写教授名称', trigger: 'blur' }
                    ]
                }
            },
            created: function () {
                this.fetchClass();
                console.log(this);

            },
            methods: {
                All: function () {
                    this.status = '';
                    this.searchText = '';
                },
                fetchClass: function () {
                    var _this = this;
                    axios.get("/api/class/?nick=" + _this.searchText).then(function (response) {
                        _this.ClassInfos = response.data;
                    }).catch(function (error) {
                        _this.$Message.error('查询课程失败!' + error.response.data);
                    });
                },
                handleSubmit: function () {
                    var _this = this;
                    _this.ClassInfo.uId = this.userId;
                    if (this.ClassInfo.Name == null || this.ClassInfo.university == null || this.ClassInfo.professor == null) {
                        return _this.$Message.error('新增课程失败!');
                    } else {
                        axios.post("/api/class/add", this.ClassInfo).then(function (response) {
                            _this.$Message.success('新增课程成功!');

                            setTimeout(function () {
                                window.location.href = "/Class/Index";
                            }, 300);
                        }).catch(function (error) {
                            _this.$Message.error('新增课程失败!' + error.response.data);
                        });
                    }

                },
                redirect: function (val) {
                    window.location.href = "/class/Edit?id=" + val;
                },
                terminate: function (val) {
                    if (confirm("本操作无法更改确定删除吗?")) {
                        var _this = this;
                        axios.get("/api/class/del?id=" + val).then(function (response) {
                            _this.$Message.success('删除成功!');
                            setTimeout(function () {
                                window.location.href = "/class/index";
                            }, 300);
                        }).catch(function (error) {
                            _this.$Message.error('删除失败!' + error.response.data);
                        });
                    }
                },
                GetOrder: function (val) {
                    window.location.href = "/ClassOrder/OrderInfo?Classid=" + val;
                },
                Add: function (val) {
                    window.location.href = "/ReviewData/Index?id=" + val;
                },
                orderForm: function (val) {
                    window.location.href = "/ClassOrder/Index?id=" + val;

                }
            }
        })


    </script>
}